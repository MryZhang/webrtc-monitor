"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),Streamer=function(){function e(n){_classCallCheck(this,e);var t=n||{},o=t.$video,i=t.signal;this.signal=i,this.$video=o,this.stream=null,this.pc=null,this.constraints={audio:!0,video:!0},this.config={iceServers:[{url:"stun:stun.l.google.com:19302"}]}}return _createClass(e,[{key:"start",value:function(){var e=this;this.setEvents(),navigator.mediaDevices.getUserMedia(this.constraints).then(function(n){return e.gotStream(n)}).catch(function(e){alert("Error: "+e.name),console.log("ERROR getting media:",e),console.log("STACK TRACE:",e.stack)})}},{key:"setEvents",value:function(){var e=this;window.onbeforeunload=function(){sendMessage("bye")},this.signal.on("offer",function(n){return e.onOffer(n)}),this.signal.on("answer",function(n){return e.onAnswer(n)}),this.signal.on("candidate",function(n){return e.onRemoteIceCandidate(n)}),this.signal.on("media",function(n){return e.onMedia(n)}),this.signal.on("bye",function(n){return e.onBye(n)}),this.signal.on("reload",function(n){return e.onReload(n)}),this.signal.on("enable-audio",function(n){return e.onEnableAudio(n)}),this.signal.on("disable-audio",function(n){return e.onDisableAudio(n)})}},{key:"onOffer",value:function(e){var n=this;console.log("-- got offer:",e),this.connect(),this.pc.setRemoteDescription(new RTCSessionDescription(e),function(){n.answer()})}},{key:"onAnswer",value:function(e){console.log("-- got answer:",e),this.pc.setRemoteDescription(new RTCSessionDescription(e))}},{key:"onRemoteIceCandidate",value:function(e){console.log("-- got candidate:",e);var n=new RTCIceCandidate({sdpMLineIndex:e.label,candidate:e.candidate});this.pc.addIceCandidate(n)}},{key:"onMedia",value:function(e){console.log("-- got media:",e),this.connect()}},{key:"onBye",value:function(e){console.log("-- client disconnected:",e),this.handleRemoteHangup()}},{key:"onReload",value:function(e){console.log("-- reload streamer:",e),location.reload()}},{key:"onEnableAudio",value:function(e){console.log("-- enable audio:",e),this.stream.getAudioTracks()[0].enabled=!0}},{key:"onDisableAudio",value:function(e){console.log("-- disable audio:",e),this.stream.getAudioTracks()[0].enabled=!1}},{key:"gotStream",value:function(e){console.log("Adding local stream"),e.getAudioTracks()[0].enabled=!1,this.stream=e,this.signal.send({type:"media"}),this.connect()}},{key:"getStream",value:function(){return this.stream}},{key:"connect",value:function(){this.createPeerConnection(),this.pc.addStream(this.stream),this.offer()}},{key:"createPeerConnection",value:function(){var e=this;try{this.pc=new RTCPeerConnection(this.config),this.pc.onicecandidate=function(n){return e.onLocalIceCandidate(n)},console.log("Created RTCPeerConnnection")}catch(e){return console.log("Failed to create PeerConnection, exception: "+e.message),void alert("Cannot create RTCPeerConnection object.")}}},{key:"onLocalIceCandidate",value:function(e){return console.log("-- got local ice candidate event: ",e),e.candidate?void this.signal.send({type:"candidate",label:e.candidate.sdpMLineIndex,id:e.candidate.sdpMid,candidate:e.candidate.candidate}):void console.log("End of candidates.")}},{key:"handleCreateOfferError",value:function(e){console.log("createOffer() error: ",e)}},{key:"offer",value:function(){var e=this;console.log("-- offer: Sending offer to peer"),this.pc.createOffer(function(n){return e.describe(n)},function(n){return e.handleCreateOfferError(n)})}},{key:"answer",value:function(){var e=this;this.connect(),console.log("-- answer: Sending answer to peer."),this.pc.createAnswer().then(function(n){return e.describe(n)},function(n){return e.onCreateSessionDescriptionError(n)})}},{key:"describe",value:function(e){var n=this;this.pc.setLocalDescription(e,function(){console.log("set local session description",e),n.signal.send(e)})}},{key:"onCreateSessionDescriptionError",value:function(e){console.error("Failed to create session description: ",e.toString()),console.error("STACK TRACE:",e.stack)}},{key:"onRemoteStreamRemoved",value:function(e){console.log("Remote stream removed. Event: ",e)}},{key:"hangup",value:function(){console.log("Hanging up."),this.stop(),this.signal.send("bye")}},{key:"handleRemoteHangup",value:function(){console.log("Session terminated."),stop()}},{key:"stop",value:function(){pc.close(),pc=null}}]),e}(),Turn=function(){function e(n){_classCallCheck(this,e),this.config=n}return _createClass(e,[{key:"request",value:function(e){var n=!1;for(var t in this.config.iceServers)if("turn:"===this.config.iceServers[t].url.substr(0,5)){n=!0,turnReady=!0;break}n||!function(){console.log("Getting TURN server from ",e);var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4===n.readyState&&200===n.status){var e=JSON.parse(n.responseText);console.log("Got TURN server: ",e),this.config.iceServers.push({url:"turn:"+e.username+"@"+e.turn,credential:e.password}),turnReady=!0}},n.open("GET",e,!0),n.send()}()}}]),e}(),Opus=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"prefer",value:function(e){for(var n,t=e.split("\r\n"),o=0;o<t.length;o++)if(t[o].search("m=audio")!==-1){n=o;break}if(null===n)return e;for(o=0;o<t.length;o++)if(t[o].search("opus/48000")!==-1){var i=this.extractSdp(t[o],/:(\d+) opus\/48000/i);i&&(t[n]=this.setDefaultCodec(t[n],i));break}return t=this.removeCN(t,n),e=t.join("\r\n")}},{key:"extractSdp",value:function(e,n){var t=e.match(n);return t&&2===t.length?t[1]:null}},{key:"setDefaultCodec",value:function(e,n){for(var t=e.split(" "),o=[],i=0,s=0;s<t.length;s++)3===i&&(o[i++]=n),t[s]!==n&&(o[i++]=t[s]);return o.join(" ")}},{key:"removeCN",value:function(e,n){for(var t=e[n].split(" "),o=e.length-1;o>=0;o--){var i=this.extractSdp(e[o],/a=rtpmap:(\d+) CN\/\d+/i);if(i){var s=t.indexOf(i);s!==-1&&t.splice(s,1),e.splice(o,1)}}return e[n]=t.join(" "),e}}]),e}(),Signal=function(){function e(n){var t=this,o=n.uuid;_classCallCheck(this,e),this.host=location.protocol+"//"+location.host,this.isChannelReady=!1,this.socket=null,this.uuid=o,this.validEvents=["media","offer","answer","candidate","bye","reload","enable-audio","disable-audio"],this.listeners={},this.validEvents.map(function(e){t.listeners[e]=[]})}return _createClass(e,[{key:"start",value:function(){this.socket=io.connect(),console.log("-- started @ "+this.host),this.setEvents()}},{key:"createRoom",value:function(){var e=prompt("Enter room name:");e=e||"default",console.log('[ signal ]--> set room name: "'+e+'"'),this.socket.emit("create",e),console.log('[ signal ]--> creating room "'+e+'"')}},{key:"setEvents",value:function(){var e=this;this.socket.on("connect",function(){console.log("[ signal ]--> connected; enter room "+e.uuid),e.socket.emit("room",e.uuid)}),this.socket.on("created",function(e){console.log('[ signal ]--> created room "'+e+'"')}),this.socket.on("full",function(e){console.log('[ signal ]--> room "'+e+'" is full')}),this.socket.on("join",function(n){console.log('[ signal ]--> Another peer made a request to join room "'+n+'"'),console.log('[ signal ]--> This peer is the initiator of room "'+n+'"'),e.isChannelReady=!0}),this.socket.on("joined",function(e){console.log("[ signal ]--> joined: "+e),this.isChannelReady=!0}),this.socket.on("log",function(e){console.log.apply(console,e)}),this.socket.on("error",function(e){console.log("[ signal ]--> SOCKET ERROR:",e)}),this.socket.on("message",function(n){return e.onMessage(n)})}},{key:"onMessage",value:function(e){if(console.log("[ signal ]--> got message:",e),!this.validEvents.includes(e.type))throw new Error('No message handler for type "'+e.type+'"');this.listeners[e.type].map(function(n){return n(e)})}},{key:"on",value:function(e,n){if(!this.validEvents.includes(e))throw new Error("ERROR: invalid event: "+e);this.listeners[e].push(n)}},{key:"send",value:function(e){console.log("[ signal ]--> sending message:",e),this.socket.emit("message",e)}}]),e}(),uuid=location.pathname.replace("/stream/",""),signal=new Signal({uuid:uuid}),stream=new Streamer({signal:signal});signal.start(),stream.start(),new Clipboard("#copy",{text:function(){var e=location.href.replace("/stream/","/listen/");return console.log("-- set clipboard:",e),e}});